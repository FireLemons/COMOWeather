#!/bin/bash

copied_files=("configMaker" "materialize" "vue" "WeatherBotBackground")
warning_files=("assets" "build" "gitignore" "shared" "theme")
ignored_files=("about" "configMaker" "favicon" "gitmodules" "index" "jupstorm" "leaves" "nav" "nojs" "package" "snowy" "sunny-skies" "update-standalone")

#changed_files=($(git diff --name-only HEAD HEAD~1))

# For Testing
changed_files=("js/vue.min.js" "css/theme.css" "materialize/css/materialize.min.css" "configMaker" "css/nojs.css" "js/configMaker.js")

# Checks if a string contains a substring from an array
#   @param   string  The string to examine for substrings
#   @param   array   The array of substrings
#   @outputs string "true" if an element of $2 was found to be a substring of $1 "false" otherwise
#   @return  1 on missing param 0 on success
matches_list () {
  matchString="$1"
  shift
  substrings=("$@")

  if [ -z "$matchString" ];then
    echo "missing param string to be checked"
    return 1
  fi

  for substring in "${substrings[@]}"; do
    if [[ $matchString == *"$substring"* ]]; then
      echo true
      return 0
    fi
  done

  echo false
  return 0
}

cd configMaker

git checkout standalone

hadWarnings=false

for file in "${changed_files[@]}"; do
  if ! matchesList=$(matches_list $file "${copied_files[@]}"); then
    echo "ERROR: $matchesList"
  elif [[ $matchesList = true && $file != "configMaker" ]]; then
#    cp "../$file" $file
    echo "INFO: Copied $file to configMaker/$file"
  elif ! matchesList=$(matches_list $file "${warning_files[@]}"); then
    echo "ERROR: $matchesList"
  elif [[ $matchesList = true ]]; then
    echo "WARNING: changed shared file $file"
  elif ! matchesList=$(matches_list $file "${ignored_files[@]}"); then
    echo "ERROR: $matchesList"
  elif [[ $matchesList = true ]]; then
    echo "INFO: ignored $file"
  else
    echo "WARNING: $file has no update policy"
  fi
done

if [[ hadWarnings = true ]]; then
  git checkout master
fi

exit 0
